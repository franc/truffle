wrap:
  settings:
    name: Wrap-up
    home_image: /images/poollayer.jpg
introduction:
  settings:
    name: Introduction
    home_image: /images/layers.jpg
  data:
    slides:
      0:
        id: 0
        caption: <div class='center'>Thor & Middleman</div>
        content: |
          <section class='middle'>
          <p class='color1'>building multiple similar CoffeeScript applications </p>
          <h2>@francpaul</h2>
          </section>
        notes: 'Introduction start'
      1:
        id: 1
        caption: in the past 
        content: |
          <section class='color4'>code on mobile device meant</section>
          <section class="middle">
            <h1 class='huge'><span class="color3">Java</span></span class="color4">/</span><span class="color1">WAP</span></h1>
          </section>
        notes: |
          I've been building large web applications for the past decade
          developing for mobile devices has always been very attractive
          until recently that meant either developing java applications for each model or creating crap WAP interfaces.
      2:
        id: 2
        caption: recently
        content: |
          <section class="middle">
            <h1>WebKit</h1>
          </section>
          <section class="middle">
            <h1 class='color3'> HTML5 </h1>
          </section>
        notes: HTML5 and webkit support on new devices has unlocked this space for using web standard technologies.
      3:
        id: 3
        caption: ''
        content: |
          <section class="middle">
          <h2>still one annoyance ... </h2>
          </section>
        notes: ''
      4:
        id: 4
        caption: <div class='center color4'>JavaScript</div>
        content: |
          <section class="middle">
          <img src='/images/server.jpg' />
          </section>
        notes: javascript  is very flexible and powerful, but has loads of ugly boilerplate.
      5:
        id: 5
        caption: AltJS
        content: |
          <section>horde of languages </section>
          <section> transcompiles to javascript</section>
        notes: Node.JS unleased serverside JS and spawned a host of languages that transcompiles to javascript. Most notably CoffeeScript.
      6:
        id: 6
        caption: CoffeeScript
        content: |
          <section class="middle">
            <h1 class='color3'> <img src='/images/cs-logo.jpg' </h1>
          </section>
          <section class="middle huge">
            ->
          <section>
        notes: CoffeeScript has unleashed the power of javascript for the ADD stricken programmer that is me and finally everything was in place for me to start building HTML5 applications.
      7:
        id: 7
        caption: framework:
        content: <section class='middle'>Middleman</section>
        notes: |
         After spending years building web based applications, I know that there are more efficient ways of building static pages. I was not about to reinvent the wheel completely so I found myself a framework.
      8:
        id: 8
        caption: ''
        content: |
        <section> (source) -> </section>
        <section>  Middleman</section>
        notes:
      9:
        id: 9
        caption:
        content:
        notes:
      10:
        id: 10
        caption:
        content:
        notes:
      11:
        id: 11
        caption:
        content:
        notes:
      12:
        id: 12
        caption:
        content:
        notes:
      13:
        id: 13
        caption:
        content:
        notes: